{"version":3,"sources":["../../../goit-react-hw-01-components/src/components/Profile/Profile.module.css","../../../goit-react-hw-01-components/src/components/FriendsList/FriendsList.module.css","../../../goit-react-hw-01-components/src/components/Statistics/Statistics.module.css","../../../goit-react-hw-01-components/src/components/TransactionHistory/TransactionHistory.module.css","../../../goit-react-hw-01-components/src/App.module.css","../../../goit-react-hw-01-components/src/components/Profile/Profile.js","../../../goit-react-hw-01-components/src/components/Statistics/getRandomColors.js","../../../goit-react-hw-01-components/src/components/Statistics/Statistics.js","../../../goit-react-hw-01-components/src/components/FriendsList/FriendsList.js","../../../goit-react-hw-01-components/src/components/TransactionHistory/TransactionHistory.js","../../../goit-react-hw-01-components/src/App.js","../../../goit-react-hw-01-components/src/index.js"],"names":["module","exports","Profile","userName","tag","location","avatar","stats","className","s","profile","description","src","alt","name","label","quantity","followers","views","likes","colors","i","getRandomColor","console","log","Statistics","title","statistics","statList","map","stat","item","style","backgroundColor","percentage","id","FriendList","friends","friendList","friend","status","isOnline","on","off","width","TransactionHistory","items","transactionHistory","type","amount","currency","App","user","username","data","transactions","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ca0bec89.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__3dzvr\",\"description\":\"Profile_description__2GJPq\",\"avatar\":\"Profile_avatar__aV4u5\",\"name\":\"Profile_name__2Psdw\",\"tag\":\"Profile_tag__20iCl\",\"location\":\"Profile_location__3GRdm\",\"stats\":\"Profile_stats__25zJx\",\"label\":\"Profile_label__3Zjy8\",\"quantity\":\"Profile_quantity__1zFQ4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendList\":\"FriendsList_friendList__1ktY0\",\"item\":\"FriendsList_item__MaPkV\",\"status\":\"FriendsList_status__1GTig\",\"on\":\"FriendsList_on__2oVLT\",\"off\":\"FriendsList_off__3J1kT\",\"avatar\":\"FriendsList_avatar__3KgqD\",\"name\":\"FriendsList_name__LV0kC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__2QFok\",\"title\":\"Statistics_title__3PVIg\",\"statList\":\"Statistics_statList__3BR2u\",\"item\":\"Statistics_item__1vE2T\",\"label\":\"Statistics_label__227YU\",\"percentage\":\"Statistics_percentage__3inQt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transactionHistory\":\"TransactionHistory_transactionHistory__1k0Uk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__16ZpL\"};","import React from 'react';\n// import PropTypes from 'prop-types';\nimport s from './Profile.module.css';\nimport { PropTypes } from 'prop-types';\n\nconst Profile = ({ userName, tag, location, avatar, stats }) => {\n  return (\n    <div className={s.profile}>\n      <div className={s.description}>\n        <img src={avatar} alt=\"User avatar\" className={s.avatar} />\n        <p className={s.name}>{userName}</p>\n        <p className={s.tag}>@{tag}</p>\n        <p className={s.location}>{location}</p>\n      </div>\n\n      <ul className={s.stats}>\n        <li>\n          <span className={s.label}>Followers</span>\n          <span className={s.quantity}>{stats.followers}</span>\n        </li>\n        <li>\n          <span className={s.label}>Views</span>\n          <span className={s.quantity}>{stats.views}</span>\n        </li>\n        <li>\n          <span className={s.label}>Likes</span>\n          <span className={s.quantity}>{stats.likes}</span>\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nProfile.propTypes = {\n  userName: PropTypes.string,\n  tag: PropTypes.string,\n  location: PropTypes.string,\n  avatar: PropTypes.string,\n  stats: PropTypes.object,\n};\n\nexport default Profile;\n","const colors = [\n  'red',\n  'aquamarine',\n  'green',\n  'purple',\n  'yellow',\n  'orange',\n  'pink',\n];\nlet i = 0;\n\nfunction getRandomColor() {\n  // let i = 0;\n  if (i > 5) {\n    i = 0;\n  }\n  i++;\n  console.log(i, colors[i]);\n  return colors[i];\n}\nexport default getRandomColor;\n","import React from 'react';\n// import PropTypes from 'prop-types';\nimport s from './Statistics.module.css';\nimport { PropTypes } from 'prop-types';\nimport getRandomColor from './getRandomColors';\nconst Statistics = ({ title, stats }) => {\n  return (\n    <section className={s.statistics}>\n      <h2 className={s.title}>{title}</h2>\n\n      <ul className={s.statList}>\n        {stats.map(stat => (\n          <li\n            className={s.item}\n            style={{\n              backgroundColor: getRandomColor(),\n              // '#' + Math.floor(Math.random() * 16777215).toString(16),\n            }}\n            key={stat.id}\n          >\n            <span className={s.label}>{stat.label}</span>\n            <span className={s.percentage}>{stat.percentage}</span>\n          </li>\n        ))}\n      </ul>\n    </section>\n  );\n};\n\nStatistics.propTypes = {\n  title: PropTypes.string.isRequired,\n  stats: PropTypes.array.isRequired,\n};\nexport default Statistics;\n","import React from 'react';\n// import PropTypes from 'prop-types';\nimport s from './FriendsList.module.css';\nimport { PropTypes } from 'prop-types';\n\nconst FriendList = ({ friends }) => {\n  return (\n    <ul className={s.friendList}>\n      {friends.map(friend => (\n        <li className={s.item} key={friend.id}>\n          <span\n            className={s.status + ' ' + (friend.isOnline ? s.on : s.off)}\n          ></span>\n          <img\n            className={s.avatar}\n            src={friend.avatar}\n            alt={friend.name}\n            width=\"48\"\n          />\n          <p className={s.name}>{friend.name}</p>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nFriendList.propTypes = {\n  friends: PropTypes.array.isRequired,\n};\n\nexport default FriendList;\n","import React from 'react';\n// import PropTypes from 'prop-types';\nimport s from './TransactionHistory.module.css';\nimport { PropTypes } from 'prop-types';\n\nconst TransactionHistory = ({ items }) => {\n  return (\n    <table className={s.transactionHistory}>\n      <thead>\n        <tr>\n          <th>Type</th>\n          <th>Amount</th>\n          <th>Currency</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {/* ({(id, type, amount, currency)}) */}\n        {items.map(item => (\n          <tr key={item.id}>\n            <td>{item.type}</td>\n            <td>{item.amount}</td>\n            <td>{item.currency}</td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n\nTransactionHistory.propTypes = {\n  items: PropTypes.array.isRequired,\n};\n\nexport default TransactionHistory;\n\n// const TransactionHistory = ({transactions}) => (\n//   <table className={s.transactionHistory}>\n//     <thead>\n//       <tr>\n//         <th>Type</th>\n//         <th>Amount</th>\n//         <th>Currency</th>\n//       </tr>\n//     </thead>\n//     <tbody>\n//       {transactions.map(transaction => (\n//         <tr key={transaction.id}>\n//           <td>{transaction.type}</td>\n//           <td>{transaction.amount}</td>\n//           <td>{transaction.currency}</td>\n//         </tr>\n//       ))}\n//     </tbody>\n//   </table>\n// );\n// TransactionHistory.propTypes = {\n//   transactions: PropTypes.array.isRequired,\n// };\n// export default TransactionHistory;\n","import React from 'react';\nimport user from './data/user.json';\nimport data from './data/data.json';\nimport friends from './data/friends.json';\nimport transactions from './data/transactions.json';\nimport Profile from './components/Profile/Profile';\nimport Statistics from './components/Statistics/Statistics';\nimport FriendList from './components/FriendsList/FriendsList';\nimport TransactionHistory from './components/TransactionHistory/TransactionHistory';\nimport s from './App.module.css';\n\nexport default function App() {\n  return (\n    <div className={s.App}>\n      <Profile\n        userName={user.username}\n        tag={user.tag}\n        location={user.location}\n        avatar={user.avatar}\n        stats={user.stats}\n      />\n      <Statistics title=\"Upload stats\" stats={data} />\n      <FriendList friends={friends} />\n      <TransactionHistory items={transactions} />\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}